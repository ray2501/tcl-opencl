# tcl-opencl.test --
#
#	Tests for tcl-opencl
#------------------------------------------------------------------------------

lappend auto_path .
if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest 2
    namespace import -force ::tcltest::*
}
loadTestedCommands
package require vectcl
package require opencl

#-------------------------------------------------------------------------------

test opencl-1.1 {Get PlatformID, wrong # args} {*}{
    -body {
        ::opencl::getPlatformID 1 test
    }
    -returnCodes error
    -match glob
    -result {wrong # args*}
}

test opencl-1.2 {Get PlatformID test} {*}{
    -body {
        ::opencl::getPlatformID aaa
    }
    -returnCodes error
    -match glob
    -result {expected integer*}
}

test opencl-1.3 {Get Platform test} {*}{
    -body {
        set number [::opencl::getPlatformID]
        if {$number > 0} {
            set result 1
        } else {
            set result 0
        }
    }
    -result {1}
}

test opencl-1.4 {Get PlatformId test} {*}{
    -body {
        set platform [::opencl::getPlatformID 1]
    }
    -returnCodes ok
    -match glob
    -result {cl-platform0}
}

test opencl-1.5 {Get DeviceID, wrong # args} {*}{
    -body {
        ::opencl::getDeviceID $platform
    }
    -returnCodes error
    -match glob
    -result {wrong # args*}
}

test opencl-1.6 {Get DeviceID test} {*}{
    -body {
        ::opencl::getDeviceID $platform all aaa
    }
    -returnCodes error
    -match glob
    -result {expected integer*}
}

test opencl-1.7 {Get DeviceID test} {*}{
    -body {
        set number [::opencl::getDeviceID $platform all]
        if {$number > 0} {
            set result 1
        } else {
            set result 0
        }
    }
    -result {1}
}

test opencl-1.8 {Get DeviceID} {*}{
    -body {
        set device [::opencl::getDeviceID $platform all 1]
    }
    -returnCodes ok
    -match glob
    -result {cl-device0}
}

test opencl-1.9 {Close Test} {*}{
    -body {
        $device close
        $platform close
    }
    -returnCodes ok
    -result {0}
}

#-------------------------------------------------------------------------------

cleanupTests
return
